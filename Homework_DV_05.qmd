---
title: "Homework DV 05"
author: "Jessie Goldblatt"
format: html
embed-resources: true
editor: visual
---

## Question 1

I am going to begin by loading the tidyverse package.

```{r}
#| message: false
library(tidyverse)
```

I am now going to read in and `glimpse` data from the WNCAA tournament.

```{r}
#| message: false
wncaa <- read_csv("https://raw.githubusercontent.com/vaiseys/dav-course/main/Data/wncaa.csv")
glimpse(wncaa)
```

Next, I am going to `filter` the dataset for observations where `tourney_finish` equals `Champ`, as instructed.

```{r}
tourney_won <- wncaa %>% 
  filter(tourney_finish == "Champ") 
```

Now, I am going to use `group_by` and `summarize` to calculate the percentage of tournaments each team has won.

```{r}
perc_tourney_won <- tourney_won %>% 
group_by(school) %>%
  summarize(N = n()) %>%
  mutate(freq = N / sum(N),
         pct = round((freq*100), 0))
perc_tourney_won
```

I am now going to plot a bar plot that shows these percentages by school.

```{r}
ggplot(perc_tourney_won, aes(x = pct, y = reorder(school, pct, na.rm = TRUE))) +
  geom_col() +
  theme_minimal() + 
  labs(x = "Percentage",
       y = "School",
       title = "Percentage Of WNCAA Tournaments Won By School")
```

I see that most top-performing schools have won around 3% WNCAA of tournaments. Moreover, the two teams that have won the most WNCAA tournaments are UConn and the University of Tennessee; UConn has won 30% of WNCAA tournaments, and the University of Tennessee has won 22% of WNCAA tournaments.

## Question 2

I am going to create a dataset that includes just the "top teams" (the teams that show up in the bar plot above). The following code is copy pasted from the instructions and gathers the names of the champions.

```{r}
champ_names <- unique(perc_tourney_won$school)
winners <- wncaa %>% 
  filter(school %in% champ_names)
```

Now, I am going to make a plot that shows boxplots for the distribution of `seeds` for each school.

```{r}
ggplot(winners, aes(x = seed, y = school)) +
  geom_boxplot() +
  theme_minimal() + 
  labs(x = "Seed",
       y = "School",
       title = "Distribution Of Seeds By School")
```

Next, I am going to use `geom_jitter()` to show all of the data points, as is best practice these days. Moreover, I am going to use `outlier.shape = NA` in the boxplot so that I do not plot the outliers twice.

```{r}
ggplot(winners, aes(x = seed, y = school)) +
  geom_boxplot(outlier.shape = NA) +
  geom_jitter(alpha = .3) +
  theme_minimal() + 
  labs(x = "Seed",
       y = "School",
       title = "Distribution Of Seeds By School")
```

Finally, I am going to use the `reorder()` trick demonstrated during class to show the distributions in an order that is easier to understand.

```{r}
winners2 <- winners %>% 
  group_by(school) %>% 
  mutate(mean_seed = mean(seed, na.rm = TRUE)) %>%
  ungroup()

ggplot(winners2,
       aes(x = seed, y = reorder(school, -seed))) +
  geom_boxplot(outlier.shape = NA) +
  geom_jitter(alpha = .3) +
  theme_minimal() + 
  labs(x = "Seed",
       y = "School",
       title = "Distribution Of Seeds By School")
```

It appears that the University of Tennessee and Uconn are consistently seeded highly - their median seed is #1, and their lowest 25% of seeds are still rated above #5! By contrast, Notre Dame and Old Dominion University have lower median seeds, at 5 and just over 5, respectively, and their lowest 25% of seeds are both in the double digits.

I have heard of nearly all of the schools listed in the plot. However, I have never heard of Old Dominion University, nor did I know that Old Dominion University had a competitive edge in the realm of athletics. As such, I am surprised that Old Dominion University made it to the list of top teams.

Now, I am going to try to make the same plot using `geom_violin()` instead of `geom_boxplot()`.

```{r}
ggplot(winners2,
       aes(x = seed, y = reorder(school, -seed))) +
  geom_violin() +
  geom_jitter(alpha = .3) +
  theme_minimal() + 
  labs(x = "Seed",
       y = "School",
       title = "Distribution Of Seeds By School")
```

Violin plots can be a great option for displaying distributions. However, because 1. the range of seeds is wide and 2. there are not a lot of observations in the data set, the figure is not very helpful; most of the violin plots (aside from the University of Tennessee and UConn) appear as a straight line. As such, for this particular instance, I think that the box plot is more informative.

## Question 3

I am now going to make the plot above using `geom_point` only.

```{r}
winners2 <- winners %>% 
  group_by(school) %>% 
  mutate(mean_seed = mean(seed, na.rm = TRUE)) %>%
  ungroup()

ggplot(winners2,
       aes(x = seed, y = reorder(school, -seed))) +
  geom_point() +
  geom_jitter(alpha = .3)  +
  theme_minimal() + 
  labs(x = "Seed",
       y = "School",
       title = "Distribution Of Seeds By School")
```

Using `geom_point` *only* does not work very well for several reasons.

1.  I am plotting seeds, which increase in increments of one. As such, there is overplotting at every integer value.
2.  It easier to see the distribution with `geom_boxplot` than it is with `geom_point` only. This is because `geom_boxplot` clearly demarcates the minimum, maximum, median, and first and third quartiles.

## Question 4

I am going to copy and paste the code given in the instructions. This code makes a new data frame by taking the `winners` dataset, grouping by school, and taking the `mean()` and `sd()` of the columns if they are numeric.

```{r}
winners_mean_sd <- winners %>% 
  group_by(school) %>% 
  summarize(across(where(is.numeric),
                   list(mean = mean,
                        sd = sd)))
```

Now, I am going to explore the average win percentage of these top schools across the seasons. Specifically, I am going to make a dot plot where `reg_percent_mean` is on the x-axis and `school` is on the y-axis, as instructed.

```{r}
ggplot(winners_mean_sd,
       aes(x = reorder(school, reg_percent_mean), y = reg_percent_mean)) +
  geom_point() +
  coord_flip() +
  theme_minimal() + 
  labs(x = "School",
       y = "Percentage",
       title = "Average Percentage Of Wins Across the Regular Season By School")
```

It appears that, across the regular season, the average win percentage is high for all the top performing schools. Top performing schools win anywhere between approximately 75% and 90% of the time across the regular season.

The plot reveals that Texas A&M was the tournament winner with the lowest regular season win percentage with a win percentage of 73.9%.

Now, I am going to create a plot that takes standard deviation into account. I am going to use `geom_pointrange` to show the intervals of one standard deviation below and above the mean.

```{r}
ggplot(winners_mean_sd,
       aes(x = reorder(school, reg_percent_mean), y = reg_percent_mean)) +
  geom_pointrange(aes(ymin = reg_percent_mean - reg_percent_sd,
                      ymax = reg_percent_mean + reg_percent_sd)) +
  coord_flip() +
  theme_minimal() + 
  labs(x = "School",
       y = "Percentage",
       title = "Average Percentage Of Wins Across the Regular Season By School")
```

The school with the narrowest interval is Texas A&M. This incicates that there is not very much variability in the average regular season win percentage for Texas A&M; they consistently win close to 74% of the time across the regular season.

Finally, I am going to create the same plot using `geom_linerange`.

```{r}
ggplot(winners_mean_sd,
       aes(x = reorder(school, reg_percent_mean), y = reg_percent_mean)) +
  geom_linerange(aes(ymin = reg_percent_mean - reg_percent_sd,
                     ymax = reg_percent_mean + reg_percent_sd)) +
  coord_flip() +
  theme_minimal() + 
  labs(x = "School",
       y = "Percentage",
       title = "Average Percentage Of Wins Across the Regular Season By School")
```

I do not think `geom_linerange` is very useful in this context because it does not plot the mean value as a dot like `geom_pointrange` does. It is possible to add this dot, but it would require an extra line of code (`+ geom_point`). I think `geom_linerange` would be useful for a plot where the emphasis is on the range of values only and the mean is less important. However, in this case, `geom_pointrange` is superior because it automatically displays the standard deviations *and* the means, both of which are relevant.
