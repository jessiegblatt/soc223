---
title: "Homework MD 6.2"
author: "Jessie Goldblatt"
embed-resources: true
format: html
editor: visual
---

## Setting Up

I am going to begin by loading the `tidyverse`, `broom`, and `moderndive` packages and setting my ggplot theme.

```{r}
#| message: false
library(tidyverse)
library(broom)
library(moderndive)
theme_set(theme_light())
```

Next, I am now going to read in and look at data on bikes.

```{r}
data(bikes, package = "bayesrules")
glimpse(bikes)
```

## Question 0

Before conducting any analyses, I am going to establish some basic facts about the dataset:

-   There are 500 rows in the dataset. Each row represents a day .

-   The dataset covers the date range 01/01/2011 to 12/31/2012.

-   The highest observed ridership in the dataset is 6,946.

-   The highest wind speed recorded in the dataset is 34.00002.

## Question 1

I am going to find the correlation between `rides` and `temp_feel` using the `cor()` function.

```{r}
bikes %>% 
  select(rides, temp_feel) %>% 
  cor()
```

There is a strong positive correlation (.582) between the number of rides and what the temperature feels like in Fahrenheit. As the temperature feels more warm, people tend to take more bicycle rides.

Next, I am going to find the correlation between `rides` and `windspeed` using the `cor()` function.

```{r}
bikes %>% 
  select(rides, windspeed) %>% 
  cor()
```

There is a moderate negative correlation (-0.195) between the number of rides and the wind speed (in miles per hour). As the wind speed increases, people tend to take fewer bicycle rides.

## Question 2

I am going to convert `windspeed` to kilometers per hour, using the approximation that a mile is equal to 1.61 kilometers. I am going to call the new variable `wind_kph` and add it to the `bikes` data frame.

```{r}
bikes <- bikes %>% 
  mutate(wind_kph = windspeed*1.61)
```

Now, I am going to calculate the correlation between wind speed in MPH and wind speed in KPH.

```{r}
bikes %>% 
  select(windspeed, wind_kph) %>% 
  cor()
```

The correlation between wind speed in MPH and wind speed in KPH is 1 because the two variables are identical. While one variable is measured in miles (per hour) and the other is in kilometers (per hour), they represent exactly the same thing. Thus, as one variable increases, the other variable also increases in a perfectly linear and proportional manner.

## Question 3

Now, I am going to estimate a simple regression where I predict rides as a function of wind speed in **MPH** and use `broom::tidy()` to display the results.

```{r}
#Fit regression model
simple_fit_MPH <- lm(rides ~ windspeed, data = bikes)

#Get regression table
broom::tidy(simple_fit_MPH)
```

Next, I am going to run the same regression but this time predict rides as a function of wind speed in **KPH**. I am again going to use `broom::tidy()` to display the results.

```{r}
#Fit regression model
simple_fit_KPH <- lm(rides ~ wind_kph, data = bikes)

#Get regression table
broom::tidy(simple_fit_KPH)
```

The results from the first regression (wind in mph) indicate that, with each 1 mph increase in windspeed, we can expect there to be approximately 56 fewer bike rides. The results from the second regression (wind in kph) indicate that, with each 1 kph increase in windspeed, we can expect there to be approximately 34 fewer bike rides.

The aforementioned values are different because in one model, the predictor is in miles per hour (1 mile/hour), while in the other, the predictor is in kilometers per hour (1.61 miles/hour). That is, the units are different. Note that if we were to multiply the slope for the kph regression by 1.61 (-34.486\*1.61), we would get a product of -55.52, the exact slope for the mph regression. Thus, the two regressions are the same, only one has undergone a linear transformation.

In both models, the intercept (how many rides we can expect when there is no wind) is the same. This is because both regression models estimate the same "starting point," so it does not matter whether we use mph or kph for this particular value.

## Question 4

Using the model from above, I am going to find the predicted ridership if the wind is blowing at 20 KPH.

```{r}
pred_df_simple_fit_KPH <- tribble(
  ~wind_kph,
  20)

pred_df_simple_fit_KPH <- pred_df_simple_fit_KPH %>% 
  mutate(expected_rides = predict(simple_fit_KPH, newdata = pred_df_simple_fit_KPH)) %>% 
  select(expected_rides)
pred_df_simple_fit_KPH
```

The predicted ridership when the wind is blowing at 20 KPH is **3515 rides.**

Next, I am going to find the predicted ridership for if the wind is blowing at 20 MPH.

```{r}
pred_df_simple_fit_MPH <- tribble(
  ~windspeed,
  20)

pred_df_simple_fit_MPH <- pred_df_simple_fit_MPH %>% 
  mutate(expected_rides = predict(simple_fit_MPH, newdata = pred_df_simple_fit_MPH)) %>% 
  select(expected_rides)
pred_df_simple_fit_MPH
```

The predicted ridership when the wind is blowing at 20 MPH is **3095 rides.**

## Question 5

I am going to add a a new variable to the `bikes` dataframe called `temp_c` that is a conversion of `temp_feel` to Celsius.

```{r}
bikes <- bikes %>% 
  mutate(temp_c = 5/9*(temp_feel - 32))
```

Next, I am going to estimate a multiple regression that predicts rides as an additive function of `wind_kph` and `temp_c` (that is, no interaction).

```{r}
#Fit regression model
additive_model <- lm(rides ~ wind_kph + temp_c, data = bikes)

#Get regression table
broom::tidy(additive_model)
```

For a 1 degree celsius increase in temperature, the model expects a 143.23 increase in rides. Moreover, for a 1 kilometer per hour increase in wind speed, the model expects a 19.84 decrease in rides.

When there is no wind (the wind speed is 0 kph) and the temperature is 0 degrees celsius, we can expect there to be 942 rides.

## Question 6

Using the multiple regression I just estimated, I am going to calculate ridership predictions for the following situations:

-   SITUATION 1: temp = 25C, wind = 15 KPH

-   SITUATION 2: temp = 15C, wind = 5 KPH

-   SITUATION 3: temp = 10C, wind = 40 KPH

I am going to copy and paste the code given in the instructions to create a dataframe that captures each of the given situations.

```{r}
pred_df_additive_ridership <- tibble(
  situation = 1:3,
  temp_c = c(25, 15, 10),
  wind_kph = c(15, 5, 40)
)
```

Next, I am going to calculate the predicted ridership for each situation by using the `predict` function.

```{r}
pred_df_additive_ridership <- pred_df_additive_ridership %>% 
mutate(expected_ridership = predict(additive_model, newdata = pred_df_additive_ridership)) %>% 
select(situation, expected_ridership)  
pred_df_additive_ridership
```

## Question 7

Now, I am going to estimate a new model that uses `weekend` in addition to the predictors already in the model.

```{r}
#Fit regression model
additive_model_with_weekend <- lm(rides ~ wind_kph + temp_c + weekend, data = bikes)

#Get regression table
broom::tidy(additive_model_with_weekend)
```

When the variable weekend is true - that is, when a given day is a Saturday or Sunday - we can expect ridership to decrease by approximately 714 rides.

## Question 8

I am going to begin by finding the average temperature and average windspeed of the dataset.

```{r}
summary_stats <- bikes %>% 
  summarize(avg_temp = mean(temp_c), 
          avg_windspeed= mean(wind_kph))
summary_stats
```

Now, I am going to calculate the expected ridership for a *weekend day* where the temperature and wind speed are average.

```{r}
pred_df_weekend <- summary_stats %>% 
  mutate(ridership = 1214.80251 - 20.38598*(avg_windspeed) + 140.33863*(avg_temp) - 713.57504) %>% 
  select(ridership)
pred_df_weekend
```

Next, I am going to calculate the expected ridership for a *weekday* where the temperature and wind speed are average.

```{r}
pred_df_weekday <- summary_stats %>% 
  mutate(ridership = 1214.80251 - 20.38598*(avg_windspeed) + 140.33863*(avg_temp))  %>% 
  select(ridership)
pred_df_weekday
```

## Question 9

I am going to use `get_regression_points()` to see how the model did at predicting each individual value of `rides`.

```{r}
regression_points <- get_regression_points(additive_model_with_weekend)
regression_points %>% 
  arrange(residual)
```

The biggest residual was -3490, and the date it occurred was 10/29/2012. This large residual amount can be attributed to the fact that this was the day that Hurricane Sandy arrived on the East Coast of the United States. Given that this dataset represents Washington DC, people likely opted to stay home to prepare for the storm, rather than ride bikes. Accordingly, only 20 rides were taken, providing an explanation for the severe underestimation by the model on that day.
